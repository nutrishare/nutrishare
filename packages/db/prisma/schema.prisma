generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  username  String   @unique
  email     String?  @unique

  authKey      AuthKey[]
  refreshToken RefreshToken[]
  product      Product[]
  manufacturer Manufacturer[]
}

model AuthKey {
  id              String  @id
  user_id         String
  user            User    @relation(fields: [user_id], references: [id])
  hashed_password String?

  @@index([user_id])
}

model RefreshToken {
  id           String   @id @unique @default(uuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  userId       String
  user         User     @relation(fields: [userId], references: [id])
  refreshToken String
  expired      Boolean  @default(false)

  @@index(userId)
}

model Product {
  id        String   @id @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  authorId  String
  author    User     @relation(fields: [authorId], references: [id])

  name           String
  description    String?
  barcode        String?
  barcodeType    BarcodeType?
  manufacturerId String
  manufacturer   Manufacturer @relation(fields: [manufacturerId], references: [id])

  weight   Float?
  calories Float?
  fat      Float?
  protein  Float?
  carbs    Float?

  @@index(barcode)
}

enum BarcodeType {
  EAN_8
  EAN_13
  UPC_A
  UPC_E
}

model Manufacturer {
  id        String   @id @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  authorId  String
  author    User     @relation(fields: [authorId], references: [id])

  name    String
  product Product[]
}
